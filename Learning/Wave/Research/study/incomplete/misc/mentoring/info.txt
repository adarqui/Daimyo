sources:
- https://github.com/dianakimball/mentoring
- http://cobyism.com/mentoring/
- http://mentoring.is/
- https://github.com/dianakimball/mentoring

If you want to easily create your own page like this one, just fork the repository on GitHub, change the content accordingly, and your page will be instantly published at yourusername.github.com/mentoring.

ember templates:
- client side
- handlebars

script style handlebars:
<script type="text/x-handlebars">
     <h2><strong>{{firstName}} {{lastName}}</strong></h2>
</script>

routes:
- defined in App.Router
- can request data from a model, via instances of the ember route object: Ember.Route.extend()
- if a route/controller/template isn't found, ember creates an instance of them but nothing is rendered

For example, if I create a route, called "employees":

App.Router.map( function() {
   this.resource( 'employees' );
});
I would then name my components, like this:

Route object: App.EmployeesRoute
Controller: App.EmployeesController
Model: App.Employee
View: App.EmployeesView
Template: employees


models:
- an object representation of the data
- fetching defined in: https://github.com/emberjs/data
- use singular model names

controllers:
- while a model retrieves the data, a controller is what you'll use to programmatically expose that data to different parts of your application
- models have no knowledge of the controllers that will use them

views:
- manage events around user interaction and translate them into events that have meaning within your application



var App = Ember.Application.create();

That single line creates the default references to the application's router, controller, view and template.

Route object: App.ApplicationRoute
Controller: App.ApplicationController
View: App.ApplicationView
Template: application

naming conventions:
- http://guides.emberjs.com/v1.10.0/concepts/naming-conventions/
