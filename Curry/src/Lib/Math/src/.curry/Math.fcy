Prog "Math" ["Prelude"] [] [Func ("Math","fib") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") [])) (Rule [1] (Or (Case  Flex (Var 1) [Branch (LPattern (Intc  0)) (Lit (Intc  0)),Branch (LPattern (Intc  1)) (Lit (Intc  1))]) (Comb FuncCall ("Prelude","+") [Comb FuncCall ("Math","fib") [Comb FuncCall ("Prelude","-") [Var 1,Lit (Intc  1)]],Comb FuncCall ("Math","fib") [Comb FuncCall ("Prelude","-") [Var 1,Lit (Intc  2)]]]))),Func ("Math","fact") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") [])) (Rule [1] (Or (Case  Flex (Var 1) [Branch (LPattern (Intc  0)) (Lit (Intc  1))]) (Comb FuncCall ("Prelude","*") [Var 1,Comb FuncCall ("Math","fact") [Comb FuncCall ("Prelude","-") [Var 1,Lit (Intc  1)]]])))] []